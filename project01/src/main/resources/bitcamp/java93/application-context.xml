<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
  xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" 
  xmlns:context="http://www.springframework.org/schema/context"
  xmlns:aop="http://www.springframework.org/schema/aop"
  xmlns:tx="http://www.springframework.org/schema/tx"
  xmlns:p="http://www.springframework.org/schema/p"
  xsi:schemaLocation="http://www.springframework.org/schema/beans
    http://www.springframework.org/schema/beans/spring-beans.xsd
    http://www.springframework.org/schema/context
    http://www.springframework.org/schema/context/spring-context.xsd
    http://www.springframework.org/schema/aop
    http://www.springframework.org/schema/aop/spring-aop.xsd
    http://www.springframework.org/schema/tx
    http://www.springframework.org/schema/tx/spring-tx.xsd">

    <!-- web-inf 폴더 밑에 conf 폴더 만들고, 그 밑에 이파일 두고 -->
    <!-- 자동으로 생성할 클래스의 패키지를 지정한다 -->
    <!-- 자동으로 객체를 생성할 클래스가 있는 패키지를 지정한다
    자동으로 객체를 생성하려면 그 클래스에 @Component 애노테이션이 붙어 있어야한다. -->
    <context:component-scan base-package="bitcamp.java93"> <!-- 컴포넌트 자동스캔 -->
      <context:exclude-filter type="aspectj" expression="bitcamp.java93.control.*"/>
    </context:component-scan>
    
    <!-- 페이지 컨트롤러를 제외한 웹에서 사용할 공통객체 준비 -->
  
    <context:property-placeholder location="classpath:bitcamp/java93/jdbc.properties"/>
  
  <bean id="dataSource" class="org.springframework.jdbc.datasource.DriverManagerDataSource">
    <property name="driverClassName" value="${jdbc.driverClassName}"/>
    <property name="url" value="${jdbc.url}"/>
    <property name="username" value="${jdbc.username}"/>
    <property name="password" value="${jdbc.password}"/>
  </bean>
  
  <bean id="txManager" class="org.springframework.jdbc.datasource.DataSourceTransactionManager">
    <property name="dataSource" ref="dataSource"/>
  </bean>
   <bean id="sqlSessionFactory" class="org.mybatis.spring.SqlSessionFactoryBean" >
    <property name="dataSource" ref="dataSource"/>
    <property name="typeAliasesPackage" value="bitcamp.java93.domain"/>
    <property name="mapperLocations" value="classpath*:bitcamp/java93/dao/*Dao.xml"/>
   </bean>
   
   <bean class="org.mybatis.spring.mapper.MapperScannerConfigurer">
    <property name="basePackage" value="bitcamp.java93.dao" />
   </bean>
   
  <!-- 포인터컷 설정
        => 트랜젝션 관리 필터를 적용할 위치를 지정한다. -->

  <aop:config>
        <aop:pointcut id="defaultServiceOperation"
                expression="execution(* bitcamp.java93.service.*Service.*(..))"/>
        <aop:advisor pointcut-ref="defaultServiceOperation" advice-ref="defaultTxAdvice"/>
    </aop:config>
    

    <!-- 트렌젝션을 고나리하는 필터 객체 -->

        <tx:advice id="defaultTxAdvice" transaction-manager="txManager">
        <tx:attributes>
 
            <tx:method name="get*" read-only="true"/>
            <tx:method name="list*" read-only="true"/> 
            <tx:method name="*"/> 
        </tx:attributes>
    </tx:advice>

     <!-- 트렌젝션 처리하는 방법2 
       <tx:annotation-driven transaction-manager="txManager"/>
       -->
   
</beans>