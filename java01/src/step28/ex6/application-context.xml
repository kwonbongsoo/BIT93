<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
    xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
    xmlns:context="http://www.springframework.org/schema/context"
    xmlns:p="http://www.springframework.org/schema/p"
    xsi:schemaLocation="http://www.springframework.org/schema/beans 
      http://www.springframework.org/schema/beans/spring-beans.xsd
      http://www.springframework.org/schema/context
      http://www.springframework.org/schema/context/spring-context.xsd">

  <context:component-scan base-package="step28.ex6"/>
  
  <context:property-placeholder location="step28/ex6/jdbc.properties"/>
  
  <bean id="dataSource" class="org.springframework.jdbc.datasource.DriverManagerDataSource">
    <property name="driverClassName" value="${jdbc.driverClassName}"/>
    <property name="url" value="${jdbc.url}"/>
    <property name="username" value="${jdbc.username}"/>
    <property name="password" value="${jdbc.password}"/>
  </bean>
  
  <bean id="txManager" class="org.springframework.jdbc.datasource.DataSourceTransactionManager">
    <property name="dataSource" ref="dataSource"/>
  </bean>
  <!-- MyBatis를 Spring IoC 컨테이너와 연동해 사용할 때는 
        DB커넥션 풀(DataSource)의 관리 스프링에 맡겨야 한다. -->
   <bean id="sqlSessionFactory" class="org.mybatis.spring.SqlSessionFactoryBean" >
    <property name="dataSource" ref="dataSource"/>
    <property name="typeAliasesPackage" value="step28.ex6"/>
    <property name="mapperLocations" value="classpath*:step28/ex6/*Dao.xml"/>
   </bean>
   
   <!-- DAO 인터페이스의 구현체를 자동으로 생성할 객체 준비 -->
   <bean class="org.mybatis.spring.mapper.MapperScannerConfigurer">
    <property name="basePackage" value="step28.ex6" />
   </bean>
</beans>






